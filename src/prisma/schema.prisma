generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int             @id @default(autoincrement())
  email       String          @unique
  password    String
  roles       RolesOnUsers[]
  projects    Project[]
}

model Role {
  id          Int             @id @default(autoincrement())
  value       String          @unique
  description String
  users       RolesOnUsers[]
}

model RolesOnUsers {
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     Int
  role       Role      @relation(fields: [roleId], references: [id])
  roleId     Int

  @@id([userId, roleId])
}

model Project {
  id            Int                     @id @default(autoincrement())
  name          String
  owner         User                    @relation(fields: [ownerId], references: [id])
  ownerId       Int
  createDate    DateTime                @db.Timestamp @default(now())
  projectData   ProjectData[]
  columnOrder   Int[]
}

model ProjectColumn {
  id          Int                       @id @default(autoincrement())
  name        String                    @unique
  project     ProjectData[]
}

model ProjectData {
  relId Int @default(autoincrement())
  project     Project         @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId   Int
  column      ProjectColumn   @relation(fields: [columnId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  columnId    Int
  task        ProjectTask?    @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId      Int?

  @@id([relId, projectId])
}

model ProjectTask {
  id          Int                       @id @default(autoincrement())
  name        String
  description String
  createDate  DateTime                  @db.Timestamp @default(now())
  deadline    DateTime                  @db.Timestamp
  project     ProjectData[]
}